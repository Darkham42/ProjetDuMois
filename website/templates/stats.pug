div#statistics.blog-post
	h2.blog-post-title.mb-3 Statistiques

	//- Synthetic stats
	div.row.mb-4
		div.col-md-4
			div.p-4.no-gutters.border.rounded.overflow-hidden.flex-md-row.shadow-sm.position-relative
				h3#stats-pctdone.mb-0 ?%
				p.card-text.mb-auto des tâches terminées
		div.col-md-4
			div.p-4.no-gutters.border.rounded.overflow-hidden.flex-md-row.shadow-sm.position-relative
				h3#stats-contributors.mb-0 ?
				p.card-text.mb-auto contributeurs
		div.col-md-4
			div.p-4.no-gutters.border.rounded.overflow-hidden.flex-md-row.shadow-sm.position-relative
				if new Date(end_date).getTime() >= Date.now()
					h3.mb-0= Math.round((new Date(end_date+"T23:59:59Z").getTime() - Date.now()) / (1000*3600*24))
					p.card-text.mb-auto jours restants
				else
					h3.mb-0= Math.round((new Date(end_date+"T23:59:59Z").getTime() - new Date(start_date+"T00:00:00Z").getTime()) / (1000*3600*24))
					p.card-text.mb-auto jours de contributions

	div.row
		//- Leaderboard
		div.col-md-5
			h3 Classement
			p#stats-leaderboard-noauth Vous devez être connecté pour voir les statistiques détaillées
			div#stats-leaderboard-container.d-none.overflow-auto(style="height: 300px")
				table.table.table-sm
					thead
						tr
							th(scope="col") #
							th(scope="col") Pseudo
							th(scope="col") Éditions
							th(scope="col") Badges
					tbody#stats-leaderboard

		//- Charts
		div.col-md-7
			h3 Évolution
			canvas#stats-chart.chart-100w(height="300")

script.
	const BADGES_NAMES = {
		"contributed": "A participé au projet du mois",
		"score_1st": "Première place au classement",
		"score_2nd": "Deuxième place au classement",
		"score_3rd": "Troisième place au classement"
	};
	function showStatistics() {
		fetch("/projects/#{id}/stats"+(window.osm_user ? "?osm_user="+window.osm_user.name : ""))
		.then(res => res.json())
		.then(res => {
			// % of done tasks
			document.getElementById("stats-pctdone").innerHTML = res.pctTasksDone+" %";

			// Amount of contributors
			document.getElementById("stats-contributors").innerHTML = res.nbContributors;

			// Leaderboard
			if(res.leaderboard) {
				document.getElementById("stats-leaderboard-container").classList.remove("d-none");
				document.getElementById("stats-leaderboard-noauth").classList.add("d-none");
				const leaderboardBody = document.getElementById("stats-leaderboard");
				res.leaderboard.map((lb,i) => {
					const tr = document.createElement("tr");

					const td1 = document.createElement("td");
					td1.setAttribute("scope", "row");
					td1.appendChild(document.createTextNode(i+1));
					td1.classList.add("align-middle");
					tr.appendChild(td1);

					const td2 = document.createElement("td");
					td2.appendChild(document.createTextNode(lb.username));
					td2.classList.add("align-middle");
					tr.appendChild(td2);

					const td3 = document.createElement("td");
					td3.appendChild(document.createTextNode(lb.amount));
					td3.classList.add("align-middle");
					tr.appendChild(td3);

					const td4 = document.createElement("td");
					lb.badges.forEach(badge => {
						const img = document.createElement("img");
						img.src = `/images/badges/${badge}.mini.svg`;
						img.classList.add("stats-badge-mini", "align-middle");
						img.title = BADGES_NAMES[badge];
						td4.appendChild(img);
					});
					tr.appendChild(td4);

					return tr;
				})
				.forEach(d => leaderboardBody.appendChild(d));
			}
			else {
				document.getElementById("stats-leaderboard-container").classList.add("d-none");
				document.getElementById("stats-leaderboard-noauth").classList.remove("d-none");
			}

			// Evolution chart
			const ctx = document.getElementById("stats-chart").getContext("2d");
			const myChart = new Chart(ctx, {
				type: "line",
				data: {
					datasets: res.chart
				},
				options: {
					responsive: true,
					scales: {
						xAxes: [{
							type: 'time',
							bounds: 'ticks',
							time: {
								tooltipFormat: "DD/MM",
								displayFormats: {
									day: "DD/MM"
								}
							}
						}],
						yAxes: [{
							ticks: {
								beginAtZero: true
							}
						}]
					}
				}
			});
		});
	}

	window.addEventListener("osm_login", () => {
		showStatistics();
	});

	window.addEventListener("osm_logout", () => {
		document.getElementById("stats-leaderboard-container").classList.add("d-none");
		document.getElementById("stats-leaderboard-noauth").classList.remove("d-none");
	});

	showStatistics();
